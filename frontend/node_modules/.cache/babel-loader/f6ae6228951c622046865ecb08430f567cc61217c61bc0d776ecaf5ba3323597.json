{"ast":null,"code":"import React, { useState } from 'react';\nimport apiService from '../apiServices';\nimport { Log } from '../loggingMiddleware'; // Adjust path as necessary\n\nconst URLShortener = () => {\n  // ... state initialization omitted for brevity\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validUrls = urls.filter(url => url.trim()).map((url, index) => ({\n      url,\n      validity: validities[index] || 30,\n      shortcode: shortcodes[index] || ''\n    }));\n    try {\n      const results = await Promise.all(validUrls.map(data => apiService.createShortURL(data)));\n      setShortenedLinks(results);\n      console.info('URLs shortened successfully');\n      await Log(\"frontend\", \"info\", \"api\", \"URLs shortened successfully\");\n    } catch (error) {\n      console.error(`Error shortening URLs: ${error.message}`);\n      await Log(\"frontend\", \"error\", \"api\", `Error shortening URLs: ${error.message}`);\n    }\n  };\n\n  // ... JSX omitted for brevity\n};\n_c = URLShortener;\nexport default URLShortener;\nvar _c;\n$RefreshReg$(_c, \"URLShortener\");","map":{"version":3,"names":["React","useState","apiService","Log","URLShortener","handleSubmit","e","preventDefault","validUrls","urls","filter","url","trim","map","index","validity","validities","shortcode","shortcodes","results","Promise","all","data","createShortURL","setShortenedLinks","console","info","error","message","_c","$RefreshReg$"],"sources":["D:/1aa-project/frontend/src/components/URLShortener.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport apiService from '../apiServices';\r\nimport { Log } from '../loggingMiddleware'; // Adjust path as necessary\r\n\r\nconst URLShortener = () => {\r\n  // ... state initialization omitted for brevity\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validUrls = urls.filter(url => url.trim()).map((url, index) => ({\r\n      url,\r\n      validity: validities[index] || 30,\r\n      shortcode: shortcodes[index] || '',\r\n    }));\r\n    try {\r\n      const results = await Promise.all(validUrls.map(data => apiService.createShortURL(data)));\r\n      setShortenedLinks(results);\r\n      console.info('URLs shortened successfully');\r\n      await Log(\"frontend\", \"info\", \"api\", \"URLs shortened successfully\");\r\n    } catch (error) {\r\n      console.error(`Error shortening URLs: ${error.message}`);\r\n      await Log(\"frontend\", \"error\", \"api\", `Error shortening URLs: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // ... JSX omitted for brevity\r\n};\r\n\r\nexport default URLShortener;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,SAASC,GAAG,QAAQ,sBAAsB,CAAC,CAAC;;AAE5C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB;;EAEA,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,SAAS,GAAGC,IAAI,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACF,GAAG,EAAEG,KAAK,MAAM;MACpEH,GAAG;MACHI,QAAQ,EAAEC,UAAU,CAACF,KAAK,CAAC,IAAI,EAAE;MACjCG,SAAS,EAAEC,UAAU,CAACJ,KAAK,CAAC,IAAI;IAClC,CAAC,CAAC,CAAC;IACH,IAAI;MACF,MAAMK,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACb,SAAS,CAACK,GAAG,CAACS,IAAI,IAAIpB,UAAU,CAACqB,cAAc,CAACD,IAAI,CAAC,CAAC,CAAC;MACzFE,iBAAiB,CAACL,OAAO,CAAC;MAC1BM,OAAO,CAACC,IAAI,CAAC,6BAA6B,CAAC;MAC3C,MAAMvB,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,6BAA6B,CAAC;IACrE,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0BA,KAAK,CAACC,OAAO,EAAE,CAAC;MACxD,MAAMzB,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,0BAA0BwB,KAAK,CAACC,OAAO,EAAE,CAAC;IAClF;EACF,CAAC;;EAED;AACF,CAAC;AAACC,EAAA,GAtBIzB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}